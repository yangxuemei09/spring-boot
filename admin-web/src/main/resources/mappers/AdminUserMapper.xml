<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tangdi.pump.mapper.AdminUserMapper">
  <resultMap id="BaseResultMap" type="com.tangdi.pump.model.po.AdminUser">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="user_status" jdbcType="CHAR" property="userStatus" />
    <result column="last_upd_pwd_time" jdbcType="TIMESTAMP" property="lastUpdPwdTime" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="AdminUserResultMap" type="com.tangdi.pump.model.vo.AdminUserVO">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="user_status" jdbcType="CHAR" property="userStatus" />
    <result column="last_upd_pwd_time" jdbcType="TIMESTAMP" property="lastUpdPwdTime" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from admin_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tangdi.pump.model.po.AdminUser">
    insert into admin_user (user_id, user_name, mobile, 
      email, password, role_id, 
      avatar, user_status, last_upd_pwd_time, 
      add_time, update_time)
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{userStatus,jdbcType=CHAR}, #{lastUpdPwdTime,jdbcType=TIMESTAMP}, 
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.tangdi.pump.model.po.AdminUser">
    update admin_user
    set user_name = #{userName,jdbcType=VARCHAR},
      <if test="mobile != null" >
          mobile = #{mobile},
      </if>
      <if test="email != null" >
          email = #{email},
      </if>
      <if test="password != null" >
          password = #{password},
      </if>
      <if test="roleId != null" >
          role_id = #{roleId},
      </if>
      <if test="avatar != null" >
          avatar = #{avatar},
      </if>
      <if test="userStatus != null" >
          user_status = #{userStatus},
      </if>
      <if test="lastUpdPwdTime != null" >
          last_upd_pwd_time = #{lastUpdPwdTime},
      </if>
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_name, mobile, email, password, role_id, avatar, user_status, 
    last_upd_pwd_time, add_time, update_time
    from admin_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select user_id, user_name, mobile, email, password, role_id, avatar, user_status, 
    last_upd_pwd_time, add_time, update_time
    from admin_user
  </select>

  <!--登录-->
  <select id="login" parameterType="AdminUser" resultMap="BaseResultMap">
    select user_id, user_name, mobile, email, password, role_id, avatar, user_status,
      last_upd_pwd_time, add_time, update_time
    from admin_user
    where user_name = #{userName} and password = #{password}
  </select>

  <!--按条件查询列表-->
  <select id="selectListByCondition" resultMap="AdminUserResultMap">
    select a.user_id, a.user_name, a.mobile, a.email, a.role_id, a.avatar, a.user_status,
      a.last_upd_pwd_time, a.add_time, a.update_time, b.name as role_name
    from admin_user a left join admin_role b on a.role_id=b.role_id
    <trim prefix="WHERE" prefixOverrides="AND" >
      <if test ="userName !=null" >
        and a.user_name like CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
      </if>
      <if test ="mobile !=null" >
        and a.mobile like CONCAT('%',#{mobile,jdbcType=VARCHAR},'%')
      </if>
      <if test ="nickname !=null" >
        and a.nickname like CONCAT('%',#{nickname,jdbcType=VARCHAR},'%')
      </if>
      <if test ="roleId !=null" >
        and a.role_id = #{roleId,jdbcType=VARCHAR}
      </if>
    </trim>
  </select>

  <!--更新密码-->
  <update id="updatePasswordByUserId" parameterType="com.tangdi.pump.model.po.AdminUser">
    update admin_user
    set password = #{password},
    update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>

  <!--查询重复记录-->
  <select id="selectRepeatList" resultMap="BaseResultMap">
    select user_id, user_name, mobile, email, password, role_id, avatar, user_status,
      last_upd_pwd_time, add_time, update_time
    from admin_user
    <trim prefix="WHERE" prefixOverrides="AND" >
      <if test ="userName !=null" >
        and user_name = #{userName,jdbcType=VARCHAR}
      </if>
      <if test ="mobile !=null" >
        and mobile = #{mobile,jdbcType=VARCHAR}
      </if>
    </trim>
  </select>
  <!--根据id查询记录-->
  <select id="selectById" parameterType="java.lang.Integer" resultMap="AdminUserResultMap">
    select a.user_id, a.user_name, a.mobile, a.email, a.role_id, a.avatar, a.user_status,
      a.last_upd_pwd_time, a.add_time, a.update_time, b.name as role_name
    from admin_user a left join admin_role b on a.role_id = b.role_id
    where a.user_id = #{userId,jdbcType=VARCHAR}
  </select>
</mapper>